{"version":3,"sources":["store/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","disable","doLogin","App","isLogggedIn","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75503a10.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n\r\n    constructor() {\r\n        extendObservable (this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username:''\r\n        })\r\n    }\r\n\r\n}\r\nexport default new UserStore();","import react,{Component} from 'react';\r\n\r\n\r\n\r\nclass InputField extends Component{\r\n \r\n  render(){\r\n              return (\r\n              <div className=\"inputfield\">\r\n              \r\n              <input\r\n                  className='input'\r\n                  type={this.props.type}\r\n                  placeholder={this.props.placeholder}\r\n                  value={this.props.value}\r\n                  onChange={ (e)=> this.props.onChange(e.target.value)}\r\n              />\r\n\r\n              </div>\r\n              );\r\n          }\r\n}\r\n\r\nexport default InputField;\r\n","import react,{Component} from 'react';\r\n\r\nclass SubmitButton extends Component{\r\n \r\n  render(){\r\n              return (\r\n              <div className=\"submitbutton\">\r\n              <button \r\n                    className='btn'\r\n                    disabled={this.props.disabled}\r\n                    onClick={ () => this.props.onClick() } \r\n              >\r\n                 {this.props.text}\r\n              </button>\r\n              </div>\r\n              );\r\n          }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import react,{Component} from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './store/UserStore';\r\n\r\nclass LoginForm extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    }\r\n\r\n\r\n  }\r\n\r\n  setInputValue (property,val){\r\n    val =val.trim();\r\n    if (val.length>12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled:true\r\n    })\r\n    try{\r\n      let res = await fetch('/login',{\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type':'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      \r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success ){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username=result.username;\r\n      }\r\n      else if ( result && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n \r\n  render(){\r\n              return (\r\n              <div className=\"loginform\">\r\n              Log In \r\n              <InputField\r\n               type='text'\r\n               placeholder='Username'\r\n               value={this.state.username ? this.state.username:''}\r\n               onChange={(val)=> this.setInputValue ('username',val)}\r\n              />\r\n               <InputField\r\n               type='password'\r\n               placeholder='password'\r\n               value={this.state.password ? this.state.password:''}\r\n               onChange={(val)=> this.setInputValue ('password',val)}\r\n              />\r\n              <SubmitButton\r\n              text='Login'\r\n              disable={this.state.buttonDisabled}\r\n              onClick={()=> this.doLogin()}\r\n              \r\n              />\r\n              </div>\r\n              );\r\n          }\r\n}\r\n\r\nexport default LoginForm;\r\n","import react,{Component} from 'react';\nimport './App.css';\nimport {observer} from 'mobx-react';\nimport UserStore from './store/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\n\nclass App extends Component{\n\n  async componentDidMount(){\n\n    try {\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type':'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n\n            UserStore.loading =false;\n            UserStore.isLogggedIn =true;\n            UserStore.username = result.username;\n\n      }\n      else \n      {\n        \n        UserStore.loading =false;\n        UserStore.isLogggedIn =false;\n\n      }\n    }\n    catch (e){\n        UserStore.loading =false;\n        UserStore.isLogggedIn =false;\n\n    }\n  }\n  async doLogout(){\n\n    try {\n      let res = await fetch('/logout',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type':'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n\n            UserStore.isLogggedIn =false;\n            UserStore.username = '';\n\n      }\n   \n    }\n    catch (e){\n      console.log(e);\n\n    }\n  }\n \n  render(){\n    if (UserStore.loading){\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <h1> Loading Please wait....</h1> \n              </div>\n        </div>\n\n      );\n    }\n\n    else {\n      if (UserStore.isLogggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.username}\n              <SubmitButton\n                  text ={'Log out'}\n                  disable = {false}\n                  onClick ={ ()=> this.doLogout() }\n              />\n                </div>\n          </div>\n  \n        );\n      }\n              return (\n              <div className=\"app\">\n                  <div className='container'>\n                     <LoginForm />\n                  </div>\n              <h1> abc....</h1> \n              </div>\n              );\n          }\n        }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}